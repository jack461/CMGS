

//====== Debugger ======
function
show_Memory(membox)
local (h1, h2, uix_jneed, uix_jmini, svr, svz, pt, ptr, dec, nad, cnt, v, zm, ii, ms_x, ms_y, w1, w2, u_flg,
    bl, s, ty, add, zz, zzch, zzmi, zzent, zzmcl, zzmmd, xx, act, jmc, u_ch, u_ms_x, u_ms_y)
(
    act = 0;
    h1 = uix_jpadHeight(1); // height
    h2 = membox[18] * membox[17] + ui_jd_bboxs; //
    svr = ui_bx_min_w;
    svz = uix_req_w;
    uix_jneed = h1 + h2 + ui_jd_ctgr;
    uix_jmini = h1 + membox[18] * 4 + ui_jd_bboxs + ui_jd_ctgr;
    (ui_height() >= uix_jmini) ? (
        ui_split_top(uix_jneed);
            memoryBox1[20] ? ui_set_rect(ui_left(), ui_top(),max(ui_MinSize1Pane,min(ui_BestSize1Pane, ui_width())), ui_height());
            // Update local values
            padDebugp = membox[0];
            padDebugLabs = membox[1];
            padDebugColrs = membox[2];
            padDebugCells = membox[3];
            padDebugVals = membox[4];
            debugDispl = membox[12];
            zzmi = ui_hover();
            jmc = ui_jmouse_cap;
            keepBlockInfos(membox[19]);
            (zzmi) ? (
                ui_push();
                    // stack is now 2 levels deep
                    ui_color(Col_Frame);
                    ui_border(); // draws in purple
                ui_pop();
            );
            control_group(blockDispNames[blockDispInverts[membox[19]]]);
            ui_split_top(h1);
                ui_pad(1,2,3,2);
                /*
                ms_x = ms_y = -1;
                (zzmi = ui_hover()) ? (
                    ms_x = uix_mouse_x - ui_left(); ms_y = uix_mouse_y - ui_top();
                );
                */

                zm = ui_jmouse_cap;
                mSL_setStrArray(padDebugLabs, padDebugSiz);
                ii = 0; loop(padDebugSiz,
                    padDebugColrs[ii] = Col_Inactive;
                    ii+=1;
                );


                strcpy(padDebugLabs[0], DebugTbNames[membox[6]]);
                padDebugColrs[0] = Col_Cmnds;

                sprintf(padDebugLabs[1], "@%d", membox[7]);
                padDebugColrs[1] = Color_Fern_Green;

                padDebugLabs[2] = "<â€”>";
                padDebugColrs[2] = Col_InfoC;

                sprintf(padDebugLabs[3], "%d", membox[15]);
                sprintf(padDebugLabs[4], "%d", membox[16]);
                sprintf(padDebugLabs[5], "%d", ZZZUIH);
                sprintf(padDebugLabs[6], "%d", membox[15]);
                sprintf(padDebugLabs[7], "%d", membox[16]);

                zz = control_jpad(padDebugp);
                (zz > 0) ? (
                    ui_GFXdoNow |= 1;
                    zzch = padDebugp[ui_jpad_lkey];
                    zzent = padDebugp[ui_jpad_entkey]-1;
                    zzmcl = padDebugp[ui_jpad_last]-1;
                    zzmmd = padDebugp[ui_jpad_lmods];

                    (zz & ui_jpad_ev_key) ? (
                        Keyed = zzch; // note char
                        (zzent === 1) ? (
                            membox[7] = updtBNumber(membox[7], zzch, dbg_mem_alt);
                        );
                    );

                    (zz & ui_jpad_ev_lmc) ? (  // left mouse clic
                        (zzmcl === 0) ? (
                            membox[7] = membox[8];
                        ) :
                        (zzmcl === 2) ? (
                            cnt = debugDSize; nad = 0;
                            while ((nad === 0) && (cnt > 0)) (
                                nad = debugDispl[membox[10] = (membox[10]+debugDSize-1)%debugDSize];
                                cnt -= 1;
                            );
                            membox[7] = membox[8] = nad;
                        );
                    );

                    (zz & ui_jpad_ev_rmc) ? (  // right mouse clic
                        (zzmcl === 0) ? (
                            xx = control_jmenu(menu_Debug);
                            (xx > 0) ? (
                                membox[6] = xx - 1;
                                membox[7] = membox[8] = DebugTbAdds[membox[6]];
                                membox[9] = DebugTbDecs[membox[6]];
                                membox[14] = DebugTbTyps[membox[6]];
                                debugDispl[membox[13]] = membox[8];
                                membox[10] = membox[13] = (membox[13] + 1) % debugDSize;
                            );
                        ) :
                        (zzmcl === 2) ? (
                            cnt = debugDSize; nad = 0;
                            while ((nad === 0) && (cnt > 0)) (
                                nad = debugDispl[membox[10] = (membox[10]+1)%debugDSize];
                                cnt -= 1;
                            );
                            membox[7] = membox[8] = nad;
                        );
                    );
                );

            ui_pop();
            ui_split_top(h2);
                ui_bx_min_w = 80;
                uix_req_w = 80;

                // special dynamic references
                (membox[14] & 0x100) ? (
                    (membox[7] === 0) ? (
                        membox[9] = membox[8] = membox[7] = mSL_active_Thread - 2;
                    ) :
                    (membox[7] === 1) ? (
                        membox[9] = membox[8] = membox[7] = mSL_TreeMainStruc - 2;
                    ) :
                    (membox[7] === 2) ? (
                        membox[9] = membox[8] = membox[7] = mSL_CG_MainGen - 2;
                    ) :
                    (membox[7] === 3) ? (
                        membox[9] = membox[8] = membox[7] = UAdd;
                    ) :
                    (membox[7] === 4) ? (
                        membox[9] = membox[8] = membox[7] = mSL_new_memory;
                    );
                );
                membox[14] &= 0xff;

                dbg_u_ms_x = dbg_u_ms_y = -1;
                (u_zzmi = ui_hover()) ? (
                    ui_GFXdoNow |= 1;
                    ms_x = uix_mouse_x - ui_left(); ms_y = uix_mouse_y - ui_top();
                    w1 = ui_width()/5; w2 = ui_height()/membox[18];ZZZUIH = ui_height();
                    u_ms_x = min(4, 0|(ms_x/w1)); u_ms_y = 0|(ms_y / membox[18]); //min(membox[17]-1, 0|(ms_y/w2));
                    dbg_u_zmc = ui_jmouse_cap;
                    (u_ms_x !== 0) ? (
                        dbg_u_za = membox[15] = membox[7] + 4 * u_ms_y + u_ms_x - 1;
                        membox[16] = dbg_u_za[0];
                    );
                    u_ch = do_GenericKeyRead();
                    (u_ch != 0) ? (
                        // sprintf(#gfxu, "Keyed: '%c'", u_ch);
                        // mSL_log(SysLogBox, #gfxu);
                        ui_key_next();
                    );

                    u_flg = (dbg_u_zmc != dbg_u_prev_zmc) && (dbg_u_zmc & 3);
                    ((u_flg && dbg_u_zmc != 0))? (
                        // sprintf(#gfxu, "Mouse: %d", dbg_u_zmc);
                        // mSL_log(SysLogBox, #gfxu);
                        0;
                    );

                    (dbg_u_ms_x === 0) ? (
                        // first column : change address
                        ((ui_jmouse_cap === 0) && (u_ch === 'up')) ? (
                            membox[7] = membox[7] - 4;
                        ) :
                        ((ui_jmouse_cap === 0) && (u_ch === 'down')) ? (
                            membox[7] = membox[7] + 4;
                        ) :
                        ((ui_jmouse_cap === 0) && (u_ch === 'left')) ? (
                            membox[7] = membox[7] - 1;
                        ) :
                        ((ui_jmouse_cap === 0) && (u_ch === 'rght')) ? (
                            membox[7] = membox[7] + 1;
                        ) :
                        ((ui_jmouse_cap === 8) && (u_ch === 'left')) ? (
                            membox[7] = membox[7] - 4 * 32;
                        ) :
                        ((ui_jmouse_cap === 8) && (u_ch === 'rght')) ? (
                            membox[7] = membox[7] + 4 * 32;
                        ) :
                        ((ui_jmouse_cap === 8) && (u_ch === 'up')) ? (
                            membox[7] = membox[7] - 4 * 256;
                        ) :
                        ((ui_jmouse_cap === 8) && (u_ch === 'down')) ? (
                            membox[7] = membox[7] + 4 * 256;
                        ) :
                        (u_ch === '=') ? (
                            // set this location as relative zero
                            membox[9] = membox[7] + 4 * u_ms_y;
                        ) :
                        (u_ch === ':') ? (
                            membox[14] = membox[14] ~ 1;
                        ) :
                        (u_ch === 'x') ? (
                            membox[14] = membox[14] ~ 4;
                        ) :
                        (u_ch === 'c') ? (
                            memoryBoxAdd = membox[7] + 4 * u_ms_y;
                        ) :
                        (u_ch === 'm') ? (
                            act = 1;
                        ) :
                        (u_ch === 'l') ? (
                            act = 2;
                        ) :
                        (u_ch === 'j') ? (
                            act = 3;
                        ) :
                        (u_ch === 'k') ? (
                            act = 4;
                        ) :
                        (u_flg && (dbg_u_zmc & 1)) ? (
                            membox[7] = membox[7] + 4 * u_ms_y;
                        ) :
                        (u_flg && (dbg_u_zmc & 2)) ? (
                            membox[7] = membox[7] - 4 * u_ms_y;
                        );
                    ) : (
                        // other columns : jump to location
                        dbg_u_za = membox[15] = membox[7] + 4 * u_ms_y + u_ms_x - 1;
                        membox[16] = dbg_u_za[0];
                        ((ui_jmouse_cap === 0) && (u_ch === 'up')) ? (
                            membox[7] = membox[7] - 4;
                        ) :
                        ((ui_jmouse_cap === 0) && (u_ch === 'down')) ? (
                            membox[7] = membox[7] + 4;
                        ) :
                        ((ui_jmouse_cap === 0) && (u_ch === 'left')) ? (
                            membox[7] = membox[7] - 1;
                        ) :
                        ((ui_jmouse_cap === 0) && (u_ch === 'rght')) ? (
                            membox[7] = membox[7] + 1;
                        ) :
                        (u_ch === '=') ? (
                            // set this location as relative zero
                            membox[9] = membox[15];
                        ) :
                        (u_ch === ':') ? (
                            membox[14] = membox[14] ~ 1;
                        ) :
                        (u_ch === 'x') ? (
                            membox[14] = membox[14] ~ 8;
                        ) :
                        (u_ch === 'c') ? (
                            memoryBoxAdd = membox[16];
                        ) :
                        (u_ch === 'g') ? (
                            membox[16] = memoryBoxAdd;
                            ((membox[16] >= 0) && (membox[16] < fmemmax) ) ? (
                                debugDispl[membox[13]] = membox[7];
                                membox[10] = membox[13] = (membox[13] + 1) % debugDSize;
                                membox[7] = membox[8] = dbg_last_a = membox[16] - 4;
                            );
                        ) :
                        (u_flg && (dbg_u_zmc === 1)) ? (  //  left clic
                            // set this loc. as display start
                            membox[7] = membox[15];
                        ) :
                        (u_flg && (dbg_u_zmc === 33)) ? (  // ctrl-left clic
                            // jump to this location
                            ((membox[16] >= 0) && (membox[16] < fmemmax) ) ? (
                                debugDispl[membox[13]] = membox[7];
                                membox[10] = membox[13] = (membox[13] + 1) % debugDSize;
                                membox[7] = membox[8] = dbg_last_a = membox[16] - 4;
                            );
                        ) :
                        (u_flg && (dbg_u_zmc === 37)) ? (  // cmd-ctrl-left-click
                            // skip to start/end of block - click on key or ~key
                            bl = membox[15];
                            ((bl > 0) && ((s = bl[1]) >= 0) && (((ty = bl[0]) >= mSL_MKey_min) || (ty === mSL_MT_FreeSt))
                                    && (ty <= mSL_MKey_max) && (s === bl[s+2])
                                    && (bl[s+3] === (ty ~ mSL_CC_Chksum))) ? (
                                // skip to after end of block
                                debugDispl[membox[13]] = membox[7];
                                membox[10] = membox[13] = (membox[13] + 1) % debugDSize;
                                membox[7] = membox[8] = bl + s + 3 - 3;
                            ) :
                            ((bl > 2) && ((s = bl[-1]) > 0) && ((add = bl - s - 3) > 0) && (s === add[1])
                                    && (((ty = add[0]) >= mSL_MKey_min) || (ty === mSL_MT_FreeSt)) && (ty <= mSL_MKey_max)
                                    && (bl[0] === (ty ~ mSL_CC_Chksum))) ? (
                                // skip to before start of block
                                debugDispl[membox[13]] = membox[7];
                                membox[10] = membox[13] = (membox[13] + 1) % debugDSize;
                                membox[7] = membox[8] = add - 5;
                            );
                        ) :
                        (u_flg && (dbg_u_zmc === 2)) ? ( // right clic
                            // set this location as relative zero
                            membox[9] = membox[15];
                        ) :
                        (u_flg && (dbg_u_zmc === 34)) ? ( // ctrl right clic
                            // set this location content as logical zero
                            membox[9] = membox[16];
                        ) :
                        (u_flg && (dbg_u_zmc === 38)) ? ( // cmd-ctrl-right-clic
                            do_dump_block(membox[15]);
                        );
                    );
                    dbg_u_prev_zmc = dbg_u_zmc;
                );

                // show memory
                pt = membox[7];
                ui_new_column(1/5);
                ptr = pt; dbg_mem_alt = ptr[0];

                debugDispl[membox[13]] = membox[7];

                loop (membox[17],
                    (membox[14] & 4) ? (
                        (membox[14] & 1) ? (
                            sprintf(#MEM, "%X : %X", ptr, ptr - membox[9]);
                        ) : (
                            sprintf(#MEM, "%X :", ptr);
                        );
                    ) : (
                        (membox[14] & 1) ? (
                            sprintf(#MEM, "%d : %d", ptr, ptr - membox[9]);
                        ) : (
                            sprintf(#MEM, "%d :", ptr);
                        );
                    );
                    ptr += 4;
                    ui_jd_tboxh = membox[18];
                    ui_show(#MEM);
                );

                loop (4,
                    ptr = pt; pt += 1;
                    ui_new_column();
                    loop (membox[17],
                        (membox[14] & 2) ? (
                            v = gmem[ptr];
                        ) : (
                            v = ptr[0];
                        );

                        ptr += 4;
                        (membox[14] & 8) ? (
                            (v == floor(v)) ? (
                                sprintf(#VAL, "%X", v);
                            ) : (
                                sprintf(#VAL, "%17g", v);
                            );
                        ) : (
                            mSL_edit_value(#VAL, v);
                        );
                        ui_jd_tboxh = membox[18];
                        ui_show(#VAL);
                    );
                );
                ui_pop();

            ui_pop();
        ui_pop();
    );
    ui_bx_min_w = svr;
    uix_req_w = svz;
    Keyed = KeyedT = 0;

    (act === 1) ? (
        // one more line !
        membox[17] = min(256, membox[17]+1);
    ) :
    (act === 2) ? (
        // one less line !
        membox[17] = max(4, membox[17]-1);
    ) :
    (act === 3) ? (
        //  line more height !
        membox[18] = min(32, membox[18]+1);
    ) :
    (act === 4) ? (
        // line less height !
        membox[18] = max(12, membox[18]-1);
    );
);


    The memory structure is (example for full sized memory) :

  ..........................
chunk start         -->
       -2     [ 'memr'  ]    (1835363698)
       -1     [ memsize ]    Size of the Memory chunk ex: (33553409)
mSL_current_memory  -->
        0     [ 'size'  ]    mSL_MM_MemSizId   (1936292453)
        1     [ usable  ]    mSL_MM_MemSiz     Size of the max block available
        2     [ 'frhd'  ]    mSL_MM_FrHdId     (1718773860)
        3     [ 1st list]    mSL_MM_FrHd   points to the first free list
        4     [ 'frtl'  ]    mSL_MM_FrTlId (1718776940)
        5     [last list]    mSL_MM_FrTl points to the last free list
        6     [ 'fmwd'  ]    mSL_MM_LowAdId (1718450020)
        7     [ min.add ]    mSL_MM_LowAd  lower limit for memory blocks
        8     [ 'lmwd'  ]    mSL_MM_HighAdId  (1819113316)
        9     [ max.add ]    mSL_MM_HighAd  higher limit for memory block
       10     [ 'bfwa'  ]    mSL_MM_WABuffId  32 words buffer used by allocator
       11     [ bf.add  ]    mSL_MM_WABuff  pointer (relative) to buffer
       12     [    0    ]    size 0 blocks : used in algorithms
       13     [  hd-1   ]    head of the size 8/11 free blocks list (or -12)
       14     [  tl-1   ]    tail of the size 8/11 free blocks list (or -12)
       15     [    8    ]    min size for the previous list
       16     [  hd-2   ]    head of the size 12/15 free blocks list (or -15)
       17     [  tl-2   ]    tail of the size 12/15 free blocks list (or -15)
       18     [   12    ]    min size for the previous list
       19     [  hd-3   ]    head of the size 16/23 free blocks list (or -18)
       20     [  tl-3   ]    tail of the size 16/23 free blocks list (or -18)
       21     [   16    ]    min size for the previous list
       22     [  hd-4   ]    head of the size 24/31 free blocks list (or -21)
       23     [  tl-4   ]    tail of the size 24/31 free blocks list (or -21)
       24     [   24    ]    min size for the previous list
       25     [  hd-5   ]    head of the size 32/47 free blocks list (or -24)
       26     [  tl-5   ]    tail of the size 32/47 free blocks list (or -24)
       27     [   32    ]    etc...
  ..........................
       144    [ 25165824]    min size for the previous list
       145    [  hd-44  ]    head of the before last free blocks list (or -144)
       146    [  tl-44  ]    tail of the before last free blocks list (or -144)
       147    [ 33554432]    min size for the previous list
       148    [  hd-45  ]    head of the before last free blocks list (or -147)
       149    [  tl-45  ]    tail of the before last free blocks list (or -147)
       150    [ 50331648]    min size for the previous list
       151    [  hd-46  ]    head of the last free blocks list (or -150)
       152    [  tl-46  ]    tail of the last free blocks list (or -150)
       153    [   -1    ]    alloc work area (32 words)
       154    [   -1    ]
  ..........................
       183    [   -1    ]
       184    [   -1    ]    end of work area
       185    [start/end]    (538970369) start/end marker for blocks
       186    [ 'free'  ]    (539089154) -- special codification, 'free'
       187    [  size   ]    this free block size
       188    [  hd-x   ]    forward pointer to next block, actually -144
       189    [  tl-x   ]    backward pointer to next block, actually -144
       190    [    0    ]    unused
  ..........................
  33554421    [    0    ]    unused
  33554422    [    0    ]    unused
  33554423    [   size  ]    this free block size - same as add. 153
  33554424    [ ~'free' ]    (1608394493) -- special codification, ~'free'
  33554425    [start/end]    (538970369) start/end marker for blocks
  33554426    [ memsize ]    memory size - ex: (33553409) same as add -1
chunk end      -->
  33554426    [ ~'memr' ]    (312119949) the ~'memr' value
  33554427    [ MemHigh ]    (possibly) static allocator high memory marker
  33554428    [    0    ]    unused


var start = ptime();
var id = "S08";
var str=stralloc();
var zz, zt, zr;

sprintf(str, "%s-%d-Start.", id, thread(`idt));
GM_Log(str);

var siz= 31, tp, ent, u, ma, mf;
tp = malloc(siz); // set to zeroes at alloc...
loop (100,
    ent = irand(siz);
    u = tp[ent];
    (u == 0) ? (
        zt = 4 + irand(30);
        sprintf(str, "malloc(%d) =>", zt);
        GM_Log(str); 
        tp[ent] = zz = malloc(zt);
        sprintf(str, "malloc(%d) => %d", zt, zz);
        GM_Log(str); 
        ma += 1;
        zz[2] = ma; zz[3] = mf;
    ) : (
        zz = tp[ent]; zt = zz[-1];
        sprintf(str, "mfree(%d__%d) =>", zz, zt);
	GM_Log(str);
        zr = mfree(tp[ent]);
        sprintf(str, "mfree(%d__%d) => %d", zz, zt, zr);
	GM_Log(str);
        tp[ent] = 0;
        mf += 1;
    );
);
ent = 0;
loop (siz,
    u = tp[ent];
    (u != 0) ? (
        zz = tp[ent]; zt = zz[-1];
        sprintf(str, "mfree(%d__%d) =>", zz, zt);
	GM_Log(str);
        zr = mfree(tp[ent]);
        sprintf(str, "mfree(%d__%d) => %d", zz, zt, zr);
	GM_Log(str);
	tp[ent] = 0;
        mf += 1;
    );
    ent += 1;
);
u = (ma == mf) && ma;

sprintf(str, "%s-%d-Duration:  %.4f s.", id, thread(`idt), ptime() - start);
GM_Log(str);
sprintf(str, "%s-%d-Result: %d", id, thread(`idt), u);
GM_Log(str);
sprintf(str, "%s-%d-Done.  %.2fs", id, thread(`idt), ptime() - start);
GM_Log(str);
strfree(str);



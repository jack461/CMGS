var id = "T10";

var str = stralloc();

sprintf(str, "%s  started", id); GM_Log(str);


sprintf(str, "%s  MIDIlast = %d", id,  MIDIlast); GM_Log(str);
sprintf(str, "%s  SYSFlgs = %d", id,  SYSFlgs); GM_Log(str);

var act, diff, last = 0;
var flg = 1; // global loop indicator

var status = 0; // nothing is playing
var gvol = -24; // start at -16 dB
var mingen = 0.1; // min. of generators

set(`pval, `AutoMode, 0);
set(`pval, `RateInit, 0.85);
set(`pval, `VolGlob, gvol);


function MIDItask()
(
    sprintf(str, "%s   MIDItask started", id); GM_Log(str);
    last = MIDIlast[0];
    while (flg) (
        set(`pval, `VolGlob, gvol);
    	act = MIDIlast[0];
    	(act != last) ? (
            diff = 0|(act-last);
            sprintf(str, "%s  %d   %d %d %d %d", id, diff, MIDIlast[2], MIDIlast[3], MIDIlast[4], MIDIlast[5]);
            GM_Log(str);
            set(`pval, `GenNbr, 1 + rand(3));
            wait(2 + rand(5));
            set(`pval, `GenNbr, mingen);
            set(`pval, `AutoMode, 1);
            gvol = min(0, gvol + 1);
    	);
    	last = act;
        (SYSFlgs[0] & 1) ? (
            flg = 0;
            set(`pval, `AutoMode, 0);
        );
    	wait(1) ;
    );
    sprintf(str, "%s   MIDItask ended", id); GM_Log(str);
);
    

// Attention, une fonction/thread ne peut pas avoir de 
// variables locales...
function managepl()
(
    while (flg) (
        set(`pval, `GenNbr, 1 + rand(3));
        wait(2 + rand(5));
	set(`pval, `GenNbr, mingen);
        wait(90 + rand(180));
        gvol = max(-32, gvol - 2);
        (gvol <= -32) ? set(`pval, `AutoMode, 0);
    );
);


wait(5);
thread(`run, thread(`new, MIDItask));
wait(5);
thread(`run, thread(`new, managepl));
wait(5);
thread(`run, thread(`new, managepl));

wait(5);

set(`pval, `AutoMode, 1);

wait(5);

sprintf(str, "%s  ended", id); GM_Log(str);

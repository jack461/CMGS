/*
    Gauche/Droite par slider "Dyn. xpan"
*/

// déclaration de toutes les variables
var i, s, k, clip, stat, U, ppos, delta, incfact;

s = stralloc();

// ceci fournit le numéro du clip sélectionné (in clip selection, by right-click)
clip = get(`gm, `cellAlt);

// trace
sprintf(s, "Test 38 - Start - Clip %04d", clip); GM_Log(s);

// récupération de quelques variables système 
stat = get(`gm, `cbStat);

/*

        PMd, 0    // Mode n°0
           Kmd, KmdPlay
           PVol, 0 0
           Speed 1 1 0
           PMod 0

        SMd 28
            HPSet 914 916
            HPFlags 0x10
            HPCnt  8  8 
            SPAlgo 4

        910 4 1 2 3 4 0
        911 4 3 4 5 6 0
        912 4 5 6 7 8 0
        913 4 7 8 9 10 0
        914 4 9 10 11 12 0
        915 4 11 12 13 14 0
        916 4 13 14 15 16 0

*/
var x = get(`pval, 206);
var plmode = (x > 0) ? x : 0;

x = get(`pval, 207);
var spmode = (x > 0) ? x : 29;

sprintf(s, "    vars: %d, clip=%04d,  PM:%d,  SM:%d", stat, clip, plmode, spmode); GM_Log(s);

// jeu du clip. `unit demande à récupérer comme résultat l'adresse de l'unité (le player) qui a joué le clip
U = play(`clip, clip, `spmode, spmode, `plmode, plmode, `PMod, 12, `unit);

sprintf(s, "Unit = %d", U); GM_Log(s);

wait(0.1); // Delai obligatoire après "play"

// Définition des fade-in/fade-out lors des variations du slider
//   - ici, f = 0.001, il faut donc 1/f samples pour passer de 0 à 1, on est à 48kHz,
//     la durée des fades est donc 1/(f * 48000), soit environ 21 ms
//   - act1 est le code: "exécuter une opération interne du player", 
//   - l'opération est 1, qui veut dire "définir les incréments de fade-in et fade-out"
player(U, 3); // Reset globalvalues
player(U, 1, 0.0004, 0.0004);


player(U, `Dly, 11, ppos);
wait(0.1); 
player(U, `Dly,  5); // let us play

// Attente du début effectif de la lecture
while ((k = gmem[U + stat ]) === 3) (
   wait(0.01);
);

set(`pval, 205, 1);

set(`pval, `ChanNbr, 22);

wait(0.01);
k = gmem[U + stat];
// Le status doit être "busy playing", soit 258
sprintf(s, "    status = %d", k); GM_Log(s);

wait(0.01);

// Lancement de l'action sur le player.
ppos = 0;

wait(1);

/*
// Change the channels
player(U, 12, 1, 2);
player(U, 13, 7, 8);

player(U, 6, 1); // set algo fix
*/

// Experiment :
// move @ 651 from 0 to 100 in 200 seconds, by 0.137
//player(U, 15, 651, 100, 200, 0.137);
//wait(20);
// move @ 652 from 0 to 100 in 200 seconds, by 1
//player(U, 15, 652, 100, 200, 1);
// Value in GVal.


/*
*/
// Move sound from left to right
delta = 1/10000;
incfact = 1.0025; // 1.0015;

while ((delta < 1) && (get(`pval, 205) > 0)) (
    ppos += delta;
    (ppos > 1) ? (ppos -= 1; player(U, 11, ppos-0.000001, ppos));
    player(U, 11, ppos);
    delta  = min(1, delta * incfact);
    wait(0.0625);
);


while ((ppos < 1) && (get(`pval, 205) > 0)) (
    player(U, 11, ppos);
    ppos += delta;
    wait(0.0625);
);

sprintf(s, "    ppos = %f  delta = %f", ppos, delta); GM_Log(s);
player(U, 11, 0, 0.000001);
wait(0.0625);

wait(2);

// Stop repeat
player(U, 8); // stop repeat

set(`pval, 205, 0);

// Fin de l'opération
GM_Log("Test 38 - End", " ");

strfree(s);
